'use strict';

/**
 *
 * @type {OAuthClient}
 */
const OAuthClient = require('./OAuthClient');


/**
 * Creaste a new oAuth2
 * Use the same client to generate authUri for both auth flow and openID
 */
const oauthClient = new OAuthClient({
  clientId: 'ABiq0Wu62F2KHN6N5awI3qYggIAAZvOELypIylqpk5Hsge0xhf',
  clientSecret: '1mMWB2HCuUKQ4RgSeYdIxM0MVaWC9AO8lfSpRjPd',
  environment: 'production',
  redirectUri: 'https://www.getpostman.com/oauth2/callback',
  logging: true,
});

const authUri = oauthClient.authorizeUri({ scope: [OAuthClient.scopes.Accounting, OAuthClient.scopes.OpenId] });

console.log(`The authUri is is :${authUri}`);

/**
 *
 * Parse the redirect URL for authCode and exchange them for tokens
 */
const callback = 'hhttps://app.getpostman.com/oauth2/callback?code=AB11563412786oTvehYlvgkgY6x1EtENMhzgXPKL2ABGNSxG8I&state=testState&realmId=9130346593871896';

/**
Create token
 */
// oauthClient.createToken(callback)
//     .then(function(response) {
//         console.log('The response when you get the token promise 3 is  '+ JSON.stringify(response.token.getToken(),null,3));
//         // console.log('The response when you get the token promise 4 response is  '+ JSON.stringify(response,null,3));
//         console.log('The createdAt timestamp during creation is  '+ response.token.createdAt);
//     })
//   .then(validateToken)
//   .then(revokeTokens2)
//   .then(validateToken)
//   .then(revokeTokens2)
//   .then(validateToken)
//   .catch(function(e) {
//       console.log(JSON.stringify(e));
//       console.error(e.intuit_tid);
//   });

/**
 * Token Refresh with token
 */
// oauthClient.refreshUsingToken('AB11571353068FcSMWjs30fLGi9sc56GA6x5utOUKbGgMC3DC2')
//   .then(function(response){
//     console.log('The refreshed token is :' + JSON.stringify(response.token.getToken()));
//   })

/**
 * Token revoke with parameters
 */
var token = {
  token_type: 'bearer', access_token: 'eyJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiYWxnIjoiZGlyIn0..3S4dNlJtl7hoKJryf8lFhA.wUIwu2miw7fJ4c3cX5VteHbQoFZLe0bAs8gufPEfP26-wALgnRP9OOoPd3S2tB7o5p-MPaogoJj_4jhjo_H0NVAK51Syzp5k7QHVWXp_zTH-rL-O6M1ogQ7dA-PuPF9lYnR9kI-SEZ2TsCQzYlM_G9Q2sncyo-Bjn78jXnXo7GbC6h8-4Zhfg5O8WU3rlLW0ubXzwB0ysVxqeSj9-PZX87wlZPO473q3A_NXrcdUvfTBa1pL4_LqCERwNdUsJtz6M57NMeEQHm1egm__ZIC6kM0IbSYmp_uBCDvLy625SIL61VZoXc4BBOauDi2PqNrH_th8l1umJeU3pqYw9JutGD7XNKGBKZeAYabh6bTbA_yEgR0hMhMCXfUl-UG4shWTDoeYj7Yi4rlR8JfGU_qEH_x1G8lFz8xoCfy90EqwkOM9vqIO_tguGfnm4FkBaVEob-3UR28849FHjojSPVB3-ZgHFDgk4cqoN43cef308LTaeuJJ5Eze-OW2NhkGVpLBmVvgR5nMbDKn5YxwzEzCRcAXMkXaZuJ1n7Cu6mqEJKah-z7FWYxhGgkMyc_9YzzDaEVJwADq6yPU0qT-6M9uFiT5x3-uMfsbnnDrVquvEXmWfOBxEHr1Q4w0AQ6Nswq1iEL_AQya79CdRyz76JQrIlnX-KNIZQxi5A4KOiwbsllGjeJy_TYia4B46QqXpw9XP24sbulyrE7q2C_fHHbaXM7GTcnNGGX3iV7p4abfy2P40J7HKy37m8JZD2PZ53HlwhWMI1UfQ8jMDVTNmmtz_C-DNqWxMI5LVqeWGwq5CYBeCm-0eAN8qYdt99XsX9rFXQ9W0az8_--p2_-pvenhYA.N5c62UFuzkWYAfRk1zqADw', expires_in: 3600, refresh_token: 'AB11571353068FcSMWjs30fLGi9sc56GA6x5utOUKbGgMC3DC2', x_refresh_token_expires_in: 8725539, realmId: '', id_token: '', createdAt: 1562627529437,
};
// oauthClient.revoke(token)
//   .then(function(response){
//     console.log('The response after revoke is '+ JSON.stringify(response,null,2));
//   })

function validateToken() {
  console.log('INside the validateToken() function ');
  console.log(`Is the token valid ? : ${oauthClient.token.isAccessTokenValid()}`);
}


function revokeTokens2() {
  return oauthClient.revoke()
    .then((authResp) => {
      console.log(`The Response is : ${JSON.stringify(authResp)}`);
    })
    .catch((e) => {
      console.error(`The error message is :${JSON.stringify(e)}`);
      console.error(e.intuit_tid);
    });
}

function validateRefresh() {
  oauthClient.refresh()
    .then((response) => {
      console.log(`The response is ${JSON.stringify(response)}`);
      console.log(`The createdAt timestamp during refresh is  ${response.token.createdAt}`);
    });
}


var token = {
  realmId: '9130346605263066',
  token_type: 'bearer',
  access_token: 'eyJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiYWxnIjoiZGlyIn0..ZU-6Erl_HAHDtqgotunNZw.CP7Ld9NBgE0fn2QgFdtHoqCMKV1vbvD8hE4e6611WUj2aWfFlvmf18AmOAcdPT5s768GRZ-KtVE0Qk1r9z70dNeW_HtfX3nWjcFDCOagjIfFFhjAMqTlDwGZ_KAT5Ww-ep-ehRXDXviA0Ww-XCDKeZBf4YK4VkpXoX_gcZ37nmEOKQTBKkeu-WCFPHNhsotVsEzOjUw02ErQgdhXriI2SP4SaA4czXt5Ehty3PIvqWHqLPHSTG_nAxG5eDNPeV2XojWqWT_dl4xQuNWYbC9CKDlxI5KRsEjbJZW48DAI7B5bMyWCT8VhZWUTS4EzJ4IQXroyKumw0PqmmGkNqH14OghAfmCZ6mtbZI2cRA_aFIBJnrN0YcYIvNKi5eBnOPAaOKYtTWvoIZP4EaH4h5qFVG6y7db6vq1rR8N5lOSYUNI_sF4ckBE4zMeUlwAm2fFuuXwGaLueGpjkncYbJQJmAhhOLEjgiGC3etNvtXXKzgMtumW0aMgG23yfS0fG4vZmxmFhVbg0KnbciC9i-6_NmCOd_AXA9yUJzXxchXwZMoxYF4i4P14E8xhsMErHmuDX7bhN4tAECWmYplF6gHe5dVsXUK89uBMZ4IvrdzyKcV8nPcCaAkd5gL8f7Q_dZK7ithqkXclC9JfbG1D5azBNkeaYSLqPEEs8sV6hsj_vEDxIegXTtvWsPTwVzpdWV7wCsbcDLTd3FhKZ6AuVYCCoIVh3qy3ZbGoLcocdG-zUGvyo8KmzPHMMx9SJW5RQHe_IM0c4jnUHJfBXpWL6KUg9q197Ufe7VVweIDETUnqPW05841tAZUINj0I8VBOg8s5xWUEt1b6KR5mT3DdsjmSiWw.qU7-YBOl5_-533cVWuiSnQ',
  refresh_token: 'AB115713560638x9h7SOY1elOb5uAPPp1uf44DN26A3CyFzFdf',
  expires_in: 3600,
  x_refresh_token_expires_in: 8726400,
  id_token: 'eyJraWQiOiJPUElDUFJEMDkxODIwMTQiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0MTNmODdlZS1iNTA3LTQ5NmMtYTY5Ny0xOGEyZTkzNzYxOWQiLCJhdWQiOlsiQUJpcTBXdTYyRjJLSE42TjVhd0kzcVlnZ0lBQVp2T0VMeXBJeWxxcGs1SHNnZTB4aGYiXSwicmVhbG1pZCI6IjkxMzAzNDY2MDUyNjMwNjYiLCJhdXRoX3RpbWUiOjE1NjI2MTk5MjAsImlzcyI6Imh0dHBzOlwvXC9vYXV0aC5wbGF0Zm9ybS5pbnR1aXQuY29tXC9vcFwvdjEiLCJleHAiOjE1NjI2MzMyNjMsImlhdCI6MTU2MjYyOTY2M30.pnodvgE5-v1uP8Qcl4QZtPIglWz6YLvQs5xCHR4url3nf_02Yu5OZBbE6UfGh_CrdQMFkzZs-gfpcHl6JiUab-yRVpf4RlFXwZArM-YIEVvGwxaHlxbFqJ_zeQIwsVPDsraERgkRT_gG_8GuO2qfOh1XDN4K-zsfV2xPdGqda_Y',
  latency: 60000,
  createdAt: 1562629663724,
};

// revokeTokens1(token)
//   .then(function(response){
//     console.log('The Response is : ' + JSON.stringify(response));
//   })
//   .catch(function(e){
//     console.error("The error message is :"+JSON.stringify(e));
//     console.error(e.intuit_tid);
//   });

function revokeTokens1(token) {
  return oauthClient.revoke(token)
    .then((authResp) => {
      console.log(`The Response is : ${JSON.stringify(authResp)}`);
    })
    .catch((e) => {
      console.error(`The error message is :${JSON.stringify(e)}`);
      console.error(e.intuit_tid);
    });
}


//
// var timestamp = Math.round(new Date().getTime()/1000);
//
// var params = {
//     oauth_consumer_key : 'qyprd5lJUaahRGd5xF5hxIO65IPMpS',
//     oauth_consumer_secret : 'w2auAXmWr7mhSGByXiZuHkkPUzXYiplYX29oSPaQ',
//     oauth_signature_method : 'HMAC-SHA1',
//     oauth_timestamp : timestamp,
//     oauth_nonce : 'nonce',
//     oauth_version : '1.0',
//     access_token : 'lvprd68yiVtXekXdLnHO2TFYoMy7DJvXWOWmWH0Fg0mGSb5z',
//     access_secret : '67lafdXHgzljMGkCH58OYMTSPirnX6CE3QG0BQWf',
//     scope : 'com.intuit.quickbooks.accounting'
// }
//
// oauthClient.migrate(params)
//     .then(function(response){
//         console.log('The response is '+ JSON.stringify(response));
//     })
//     .catch(function(e) {
//         console.log('The error is '+ JSON.stringify(e));
//     });

// function refresh() {
//
//     oauthClient.refresh()
//         .then(function(response){
//             console.log('The message is empty : ' + JSON.stringify(response));
//         })
//         .catch(function(e) {
//             console.log('The error is '+ JSON.stringify(e));
//         });
//
// }
//
// oauthClient.refreshUsingToken('Q011552257612WJjd5OnaG0joEwD3D3e7R4yrnAnhuTa8iiTB6')
//   .then(function(response){
//     console.log('The message is empty : ' + JSON.stringify(response.getJson().refresh_token));
//   })
//   .catch(function(e) {
//     console.log('The error is '+ JSON.stringify(e));
//   });
// //

